/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  Remittance,
  RemittanceInterface,
} from "../../../../contracts/token/modules/Remittance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "LogOutstandingRemittance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum RemittanceTriggers",
        name: "trigger",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogRemittance",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "outstandingRemittances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawOutstandingRemittance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class Remittance__factory {
  static readonly abi = _abi;
  static createInterface(): RemittanceInterface {
    return new utils.Interface(_abi) as RemittanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Remittance {
    return new Contract(address, _abi, signerOrProvider) as Remittance;
  }
}
